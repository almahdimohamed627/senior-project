# docker-compose.yml
version: '3.8'

services:
  db:
    image: postgres:13
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - '5432:5432'
    networks:
      - proxy

  nest-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest-app
    environment:
      - PORT=3000
    ports:
      - '3000:3000'
    depends_on:
      - db
    volumes:
      - ./src:/app/src
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nest-app.rule=Host(`${NEST_APP_DOMAIN}`)"
      - "traefik.http.routers.nest-app.entrypoints=websecure"
      - "traefik.http.routers.nest-app.tls=true"
      - "traefik.http.routers.nest-app.tls.certresolver=le"

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '5050:80'
    depends_on:
      - db
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`${PGADMIN_DOMAIN}`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.routers.pgadmin.tls.certresolver=le"

volumes:
  postgres-data:

networks:
  proxy:
    name: proxy
