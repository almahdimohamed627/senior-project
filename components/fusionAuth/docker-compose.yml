services:
  #
  # Required services (database and FusionAuth)
  #

  # Postgresql is the default database. You can swap this out for MySQL if you prefer.
  db:
    image: postgres:16.0-bookworm
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - proxy


  # This is the main FusionAuth application.
  fusionauth:
    container_name: fusionauth
    image: fusionauth/fusionauth-app:latest
    depends_on:
      db:
        condition: service_healthy
      search:
        condition: service_healthy
    environment:
      DATABASE_URL: jdbc:postgresql://db:5432/fusionauth
      DATABASE_ROOT_USERNAME: ${POSTGRES_USER}
      DATABASE_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_USERNAME: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      FUSIONAUTH_APP_KICKSTART_FILE: ${FUSIONAUTH_APP_KICKSTART_FILE}
      FUSIONAUTH_APP_MEMORY: ${FUSIONAUTH_APP_MEMORY}
      FUSIONAUTH_APP_RUNTIME_MODE: ${FUSIONAUTH_APP_RUNTIME_MODE}
      FUSIONAUTH_APP_URL: https://${FUSIONAUTH_DOMAIN}

      SEARCH_SERVERS: http://search:9200
      SEARCH_TYPE: ${FUSIONAUTH_SEARCH_TYPE}
    healthcheck:
      test: curl --silent --fail http://localhost:9011/api/status -o /dev/null -w "%{http_code}"
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    ports:
      - 9011:9011
    volumes:
      - fusionauth_config:/usr/local/fusionauth/config
      - ${FUSIONAUTH_LOCAL_KICKSTART_DIRECTORY}:/usr/local/fusionauth/kickstart
      - ${FUSIONAUTH_LOCAL_PLUGIN_DIRECTORY}:/usr/local/fusionauth/plugins
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fusionauth.rule=Host(`${FUSIONAUTH_DOMAIN}`)"
      - "traefik.http.routers.fusionauth.entrypoints=websecure"
      - "traefik.http.routers.fusionauth.tls=true"
      - "traefik.http.routers.fusionauth.tls.certresolver=le"


  # Open Search isn't technically required, but the `fusionauth` service currently depends on it, so we start it here.
  # You can change the search engine backend to `database` in the `.env` file if you would prefer to use that.
  # Then you can remove the search dependency above and disable this service.
  search:
    image: opensearchproject/opensearch:2.11.0
    container_name: search
    environment:
      cluster.name: fusionauth
      discovery.type: single-node
      node.name: search

      plugins.security.disabled: true
      bootstrap.memory_lock: true

      OPENSEARCH_JAVA_OPTS: ${OPENSEARCH_JAVA_OPTS}
    healthcheck:
      interval: 10s
      retries: 80
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:9200/
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    volumes:
      - search_data:/usr/share/opensearch/data
    networks:
      - proxy


volumes:
  cs_config:
  db_data:
  fusionauth_config:
  prometheus_data:
  search_data:

networks:
  proxy:
    name: proxy
